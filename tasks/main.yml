---

- name: Load variables based on OS type
  ansible.builtin.include_tasks: vars.yml

- name: Make sure all required variables are given
  ansible.builtin.assert:
    that:
      - timesync_timezone is defined and timesync_timezone|length > 0
      - timesync_ntp_servers is defined and timesync_fallback_ntp_servers|length > 0

- name: Get all service facts
  ansible.builtin.service_facts:

- name: Create a list of all known services
  ansible.builtin.set_fact:
    _services: "{{ ansible_facts | json_query('services.*.name') }}"

- name: Disable obsolete services
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  failed_when: false
  when: _services is search(item)
  loop: "{{ timesync_services_obsolete }}"

- name: Uninstall packages (like chrony/ntp)
  ansible.builtin.package:
    name: "{{ timesync_packages_obsolete }}"
    state: absent

- name: Install packages
  ansible.builtin.package:
    name: "{{ timesync_packages }}"
    state: present
  when: timesync_packages|length > 0

- name: Set hwclock to local or RTC  # noqa args[module]
  community.general.timezone:
    hwclock: "{{ timesync_hwclock }}"
  when: timesync_hwclock is defined and timesync_hwclock != None
  notify: Restart timesyncd
  tags: molecule-notest

- name: Set timezone
  community.general.timezone:
    name: "{{ timesync_timezone }}"
  notify: Restart timesyncd
  when:
    - timesync_timezone is defined and timesync_timezone|length > 0
    - timesync_timezone != 'unchanged'
  tags: molecule-notest

- name: Configure timesyncd
  ansible.builtin.template:
    src: timesyncd.conf.j2
    dest: /etc/systemd/timesyncd.conf
    mode: "0644"
    owner: root
    group: root
  notify: Restart timesyncd

- name: Start and enable systemd-timesyncd
  ansible.builtin.service:
    name: systemd-timesyncd
    enabled: yes
    state: started
  tags: molecule-idempotence-notest
